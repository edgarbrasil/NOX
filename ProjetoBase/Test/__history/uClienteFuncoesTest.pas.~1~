unit uClienteFuncoesTest;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, uClienteFuncoes, uCliente;

type
  // Test methods for class TClienteFuncoes

  TestTClienteFuncoes = class(TTestCase)
  strict private
    FClienteFuncoes: TClienteFuncoes;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestObter;
    procedure TestInserir;
    procedure TestAtualizar;
    procedure TestExcluir;
  end;

implementation

procedure TestTClienteFuncoes.SetUp;
begin
  FClienteFuncoes := TClienteFuncoes.Create;
end;

procedure TestTClienteFuncoes.TearDown;
begin
  FClienteFuncoes.Free;
  FClienteFuncoes := nil;
end;

procedure TestTClienteFuncoes.TestObter;
var
  ReturnValue: TCliente;
  Codigo: Integer;
begin
  // TODO: Setup method call parameters
  ReturnValue := FClienteFuncoes.Obter(Codigo);
  // TODO: Validate method results
end;

procedure TestTClienteFuncoes.TestInserir;
var
  Cliente: TCliente;
begin
  // TODO: Setup method call parameters
  FClienteFuncoes.Inserir(Cliente);
  // TODO: Validate method results
end;

procedure TestTClienteFuncoes.TestAtualizar;
var
  Cliente: TCliente;
begin
  // TODO: Setup method call parameters
  FClienteFuncoes.Atualizar(Cliente);
  // TODO: Validate method results
end;

procedure TestTClienteFuncoes.TestExcluir;
var
  Codigo: Integer;
begin
  // TODO: Setup method call parameters
  FClienteFuncoes.Excluir(Codigo);
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTClienteFuncoes.Suite);
end.

